{"version":3,"sources":["../src/run.js"],"names":[],"mappings":";;;;;;;;IAAS,KAAK,WAAQ,kBAAkB,EAA/B,KAAK;;IACP,IAAI,2BAAM,kBAAkB;;IAC5B,MAAM,2BAAM,QAAQ;;AAEZ,oBAAe,GAAG;MAAE,IAAI,gCAAC,EAAE;MAAE,IAAI,gCAAC,EAAE;;MAG7C,IAAI,eACH,IAAI;;;;;AAHT,cAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACrD,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;AACjC,YAAI,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;;eACd,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;;;;;AAAhC,YAAI;;cAEL,IAAI,IAAI,CAAC,CAAA;;;;;cACL,IAAI,KAAK,qBAAmB,GAAG,SAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAU,IAAI,CAAG;;;;;;;CAE3E","file":"src/run.js","sourcesContent":["import { spawn } from 'mz/child_process';\nimport wait from 'event-to-promise';\nimport assert from 'assert';\n\nexport default async function(cmd, argv=[], opts={}) {\n  assert(Array.isArray(argv), 'argv must be an array');\n  opts.stdio = opts.stdio || 'inherit';\n  let proc = spawn(cmd, argv, opts);\n  let [exit] = await wait(proc, 'exit');\n\n  if (exit != 0) {\n    throw new Error(`Failed running ${cmd} ${argv.join(' ')} code: ${exit}`);\n  }\n}\n"]}