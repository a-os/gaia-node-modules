"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) { _arr.push(_step.value); if (i && _arr.length === i) break; } return _arr; } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } };

/**
This module generates a signature we can use to group caches based on node
major versions and current os.
*/

var os = _interopRequire(require("os"));

module.exports = function () {
  var type = os.type().toLowerCase();
  var arch = os.arch().toLowerCase();

  var _process$versions$node$split = process.versions.node.split(".");

  var _process$versions$node$split2 = _slicedToArray(_process$versions$node$split, 2);

  var nodeMajor = _process$versions$node$split2[0];
  var nodeMinor = _process$versions$node$split2[1];

  return "node-v" + nodeMajor + "-" + nodeMinor + "." + type + "-" + arch;
};
//# sourceMappingURL=signature.js.map