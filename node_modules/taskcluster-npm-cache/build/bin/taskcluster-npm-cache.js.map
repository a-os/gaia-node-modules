{"version":3,"sources":["../../src/bin/taskcluster-npm-cache.js"],"names":[],"mappings":";;;;;;QAGO,gBAAgB;;IAEd,cAAc,WAAQ,UAAU,EAAhC,cAAc;;IAChB,MAAM,2BAAM,QAAQ;;IACpB,KAAK,2BAAM,OAAO;;IAClB,GAAG,2BAAM,QAAQ;;IACjB,WAAW,2BAAM,oBAAoB;;IACrC,OAAO,2BAAM,oBAAoB;;IACjC,EAAE,2BAAM,OAAO;;IACf,MAAM,2BAAM,MAAM;;IAClB,cAAc,2BAAM,kBAAkB;;IACtC,IAAI,2BAAM,SAAS;;IACnB,SAAS,2BAAM,cAAc;;AAEpC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACvC,IAAI,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;AAClC,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,EAAE;AAChC,MAAI,EAAE,mCAAmC;AACzC,UAAQ,EAAE,IAAI;AACd,MAAI,EAAE,QAAQ;CACf,CAAC,CAAC;;AAEH,MAAM,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE;AAC/B,MAAI,EAAE,gCAAgC;AACtC,MAAI,EAAE,OAAO;AACb,cAAY,EAAE,CAAC;CAChB,CAAC,CAAC;;AAEH,MAAM,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,EAAE;AAClC,cAAY,EAAE,WAAW;AACzB,MAAI,EAAE,wBAAwB;CAC/B,CAAC,CAAC;;AAEH,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE;AAC9B,QAAM,EAAE,WAAW;AACnB,MAAI,EAAE,qEAAqE;CAC5E,CAAC,CAAC;;AAEH,SAAe,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU;MACzD,IAAI,EACJ,GAAG,EAEH,QAAQ,EAMR,WAAW,EAIX,GAAG;;;;;eAbW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;;;AAAjC,YAAI,oBAA+B,IAAI;AACvC,WAAG,GAAG,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC;AAErC,gBAAQ,GAAG;AACb,qBAAW,EAAE,IAAI;AACjB,iBAAO,EAAE,OAAO;AAChB,qBAAW,EAAE,mBAAmB;SACjC;;eAEuB,KAAK,CAAC,cAAc,CAC1C,MAAM,EAAE,KAAK,EAAE,4BAA4B,EAAE,QAAQ,CACtD;;;AAFG,mBAAW;AAIX,WAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC;;AACzC,WAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;AAChC,WAAG,CAAC,GAAG,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;AAC7C,WAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;AACpC,WAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,WAAG,CAAC,GAAG,EAAE,CAAA;;eACH,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC;;;;;;;CACjC;;AAED,SAAe,IAAI;MACb,IAAI,EAEJ,SAAS,EACT,SAAS,EAOT,KAAK,EACL,KAAK,EAEL,IAAI,EAOJ,GAAG,EAMH,OAAO,EAQP,OAAO,EACP,WAAW,EASX,GAAG,EACE,eAAe,EAuBpB,OAAO,EACP,SAAS,EAOP,WAAW,EAOb,SAAS,EAET,SAAS,EAGT,YAAY;;;;AA3CP,uBAAe,YAAf,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE;AACjC,cAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACnB,cAAI,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,IACvB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IACnB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IACnB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACvB,mBAAO,GAAG,CAAC,GAAG,CAAC,CAAC;WACjB;SACF;;AArDG,YAAI,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAE9C,iBAAS,GAAG,EAAE;AACd,iBAAS,GAAG,EAAE;;AAElB,YAAI,IAAI,CAAC,KAAK,EAAE;AACd,mBAAS,CAAC,OAAO,GAAG,sBAAsB,CAAC;AAC3C,mBAAS,CAAC,OAAO,GAAG,sBAAsB,CAAC;SAC5C;;AAEG,aAAK,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC;AACxC,aAAK,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC;;eAE3B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;;;AAAvC,YAAI;;AAER,YAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACvC,iBAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;AAC9C,iBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;;AAEG,WAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG;;AACjC,YAAI,CAAC,GAAG,EAAE;AACR,iBAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACxD,iBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;;AAEG,eAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;;AACnD,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,EAAE;AACxD,iBAAO,CAAC,KAAK,CACX,gEAAgE,CACjE,CAAC;AACF,iBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;;;eAEmB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;;;AAAtC,eAAO;AACP,mBAAW,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;AASjC,WAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;;;AAWjC,YAAI,GAAG,CAAC,YAAY,EAAE;AACpB,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AAClD,2BAAe,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;WACxC,CAAC,CAAC;SACJ;;AAED,YAAI,GAAG,CAAC,eAAe,EAAE;AACvB,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AACrD,2BAAe,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;WAC3C,CAAC,CAAC;SACJ;;AAGG,eAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AAC3B,iBAAS,QAAM,IAAI,CAAC,SAAS,SAAI,SAAS,EAAE,SAAI,OAAO;;AAE3D,aAAK,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACjC,aAAK,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;;;;eAId,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;;;AAA7C,mBAAW;;AACf,aAAK,CAAC,uCAAuC,CAAC,CAAC;AAC/C,eAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;;;cAEZ,CAAC,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,CAAA;;;;;;;;;eAGzB,GAAG,EAAE;;;AAAvB,iBAAS;;eACP,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;;;;eACN,SAAS,CAAC,SAAS,EAAE;;;AAAvC,iBAAS;;eACP,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC;;;AAE5D,oBAAY,GAAG;AACjB,gBAAM,EAAE,IAAI,CAAC,MAAM;AACnB,cAAI,EAAE,CAAC;AACP,iBAAO,EAAE,OAAO;AAChB,cAAI,EAAE,EAAE;SACT;;eAGK,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,YAAY,CAAC;;;;;;;CAChD;;AAED,IAAI,EAAE,SAAM,CAAC,UAAC,CAAC,EAAK;AAClB,SAAO,CAAC,QAAQ,CAAC,YAAM;AACrB,WAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACvC,UAAM,CAAC,CAAC;GACT,CAAC,CAAA;CACH,CAAC,CAAC","file":"src/bin/taskcluster-npm-cache.js","sourcesContent":["#! /usr/bin/env node\n\n// This module is the entrypoint so it needs to import the polyfill...\nimport 'babel/polyfill';\n\nimport { ArgumentParser } from 'argparse';\nimport assert from 'assert';\nimport Debug from 'debug';\nimport npm from '../npm';\nimport taskcluster from 'taskcluster-client';\nimport request from 'superagent-promise';\nimport fs from 'mz/fs';\nimport fsPath from 'path';\nimport eventToPromise from 'event-to-promise';\nimport hash from '../hash';\nimport signature from '../signature';\n\nlet debug = new Debug('npm-cache:put');\nlet parser = new ArgumentParser();\nparser.addArgument(['--task-id'], {\n  help: 'The task to run caching logic for',\n  required: true,\n  dest: 'taskId'\n});\n\nparser.addArgument(['--run-id'], {\n  help: 'Run id for the particular task',\n  dest: 'runId',\n  defaultValue: 0\n});\n\nparser.addArgument(['--namespace'], {\n  defaultValue: 'npm_cache',\n  help: 'Index namespace to use'\n});\n\nparser.addArgument(['--proxy'], {\n  action: 'storeTrue',\n  help: 'Rely on the taskcluster proxy service provided by the docker-worker'\n});\n\nasync function upload(queue, taskId, runId, expires, modulePath) {\n  let size = (await fs.stat(modulePath)).size;\n  let tar = fs.createReadStream(modulePath);\n\n  let artifact = {\n    storageType: 's3',\n    expires: expires,\n    contentType: 'application/x-tar'\n  };\n\n  let artifactUrl = await queue.createArtifact(\n    taskId, runId, 'public/node_modules.tar.gz', artifact\n  );\n\n  let put = request.put(artifactUrl.putUrl);\n  put.set('Content-Length', size);\n  put.set('Content-Type', 'application/x-tar');\n  put.set('Content-Encoding', 'gzip');\n  tar.pipe(put);\n  put.end()\n  await eventToPromise(put, 'end');\n}\n\nasync function main() {\n  let args = parser.parseArgs(process.argv.slice(2));\n\n  let queueOpts = {};\n  let indexOpts = {};\n\n  if (args.proxy) {\n    queueOpts.baseUrl = 'taskcluster/queue/v1';\n    indexOpts.baseUrl = 'taskcluster/index/v1';\n  }\n\n  let queue = new taskcluster.Queue(queueOpts);\n  let index = new taskcluster.Index(indexOpts);\n\n  let task = await queue.getTask(args.taskId);\n\n  if (!task.extra || !task.extra.npmCache) {\n    console.error('Task must contain task.extra');\n    process.exit(1);\n  }\n\n  let url = task.extra.npmCache.url;\n  if (!url) {\n    console.error('Task must contain a extra.npmCache.url');\n    process.exit(1);\n  }\n\n  let expires = new Date(task.extra.npmCache.expires);\n  if (!task.extra.npmCache.expires || expires < new Date()) {\n    console.error(\n      'Task must contain extra.npmCache.expires and be in the future.'\n    );\n    process.exit(1);\n  }\n\n  let pkgReqs = await request.get(url).end();\n  let pkgContents = pkgReqs.text.trim();\n\n  //\n  // XXXAus: HACK HACK HACK!!! To enable gaia to use local module paths in \n  //         it's package.json we will STRIP OUT all entries (after hashing!)\n  //         which are referring to local in tree modules. These will be\n  //         installed later. We will be removing this hack when we have\n  //         exhibition rolled out in gaia.\n  //\n  let pkg = JSON.parse(pkgContents);\n  function checkForRemoval(obj, key) {\n    let val = obj[key];\n    if (val.startsWith('file:') ||\n        val.startsWith('.') ||\n        val.startsWith('/') ||\n        val.startsWith('~')) {\n      delete obj[key];\n    }\n  }\n  // First we check the dependencies\n  if (pkg.dependencies) {\n    Object.keys(pkg.dependencies).forEach(function(key) {\n      checkForRemoval(pkg.dependencies, key); \n    });\n  }\n  // Next we'll check the devDependencies\n  if (pkg.devDependencies) {\n    Object.keys(pkg.devDependencies).forEach(function(key) {\n      checkForRemoval(pkg.devDependencies, key);\n    });\n  }\n\n  // Figure out hash of contents and namespace.\n  let pkgHash = hash(pkgContents);\n  let namespace = `${args.namespace}.${signature()}.${pkgHash}`\n\n  debug('Package hash =', pkgHash);\n  debug('Package namespace =', namespace);\n\n  // Check to see if we already have this package json cached...\n  try {\n    let indexedTask = await index.findTask(namespace);\n    debug('Cache hit. Skipping tarball creation.');\n    process.exit(0);\n  } catch (e) {\n    if (!err.statusCode || err.statusCode !== 404) throw e;\n  }\n\n  let workspace = await npm();\n  await workspace.install(pkg);\n  let moduleTar = await workspace.exportTar()\n  await upload(queue, args.taskId, args.runId, expires, moduleTar);\n\n  let indexPayload = {\n    taskId: args.taskId,\n    rank: 0, // XXX: How should we define ranking?\n    expires: expires,\n    data: {}\n  };\n\n  // Insert the platform specific index namespace...\n  await index.insertTask(namespace, indexPayload);\n}\n\nmain().catch((e) => {\n  process.nextTick(() => {\n    console.error('Something is wrong...');\n    throw e;\n  })\n});\n"]}